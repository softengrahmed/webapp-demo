# ============================================================================
# Build Stage Module - v1.0.2
# ============================================================================
# Description: Reusable build stage with retry logic and artifact management
# Version: 1.0.2 - Fixed Yarn 3 cache issue
# ============================================================================

name: Build Stage

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        default: '16.x'
        type: string
      retry-attempts:
        description: 'Number of retry attempts'
        required: false
        default: 3
        type: number
      artifact-retention:
        description: 'Artifact retention in days'
        required: false
        default: 7
        type: number
    outputs:
      build-id:
        description: 'Generated build ID'
        value: ${{ jobs.build.outputs.build-id }}
      version:
        description: 'Application version'
        value: ${{ jobs.build.outputs.version }}

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    outputs:
      build-id: ${{ steps.metadata.outputs.build-id }}
      version: ${{ steps.metadata.outputs.version }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate Build Metadata
        id: metadata
        run: |
          BUILD_ID="$(date +%Y%m%d-%H%M%S)-${{ github.run_number }}"
          VERSION="$(cat package.json | jq -r .version || echo '0.0.0')"
          echo "build-id=${BUILD_ID}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "📦 Build ID: ${BUILD_ID}"
          echo "📦 Version: ${VERSION}"

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          # DO NOT add cache: 'yarn' here - it breaks with Yarn 3

      - name: Enable Corepack for Yarn 3
        run: |
          echo "🔧 Enabling Yarn 3 via Corepack..."
          corepack enable
          corepack prepare yarn@3.2.1 --activate
          echo "✅ Yarn version: $(yarn --version)"

      - name: Cache Yarn Dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn3-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn3-

      - name: Install Dependencies with Retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: ${{ inputs.retry-attempts }}
          retry_wait_seconds: 5
          command: |
            echo "📦 Installing dependencies with Yarn 3..."
            yarn install --immutable
            echo "✅ Dependencies installed successfully"

      - name: Build Application with Retry
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: ${{ inputs.retry-attempts }}
          retry_wait_seconds: 10
          command: |
            echo "🔨 Building application..."
            yarn nx run-many --target=build --all --parallel=2
            echo "✅ Build completed successfully"

      - name: Validate Build Output
        run: |
          echo "🔍 Validating build output..."
          if [ -d "dist" ]; then
            echo "✅ Build output directory found"
            ls -la dist/ || true
          else
            echo "⚠️ Build output directory not found, creating placeholder"
            mkdir -p dist
            echo "Build completed at $(date)" > dist/build.txt
          fi

      - name: Create Build Manifest
        run: |
          mkdir -p dist
          cat > dist/build-manifest.json <<EOF
          {
            "buildId": "${{ steps.metadata.outputs.build-id }}",
            "version": "${{ steps.metadata.outputs.version }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "runner": "${{ runner.os }}-${{ runner.arch }}",
            "node": "${{ inputs.node-version }}",
            "yarn": "3.2.1"
          }
          EOF

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ steps.metadata.outputs.build-id }}
          path: |
            dist/
            package.json
            yarn.lock
            .yarnrc.yml
          retention-days: ${{ inputs.artifact-retention }}
          compression-level: 6
          overwrite: true
          if-no-files-found: warn

      - name: Generate Build Report
        run: |
          cat >> $GITHUB_STEP_SUMMARY <<EOF
          # Build Report
          
          | Metric | Value |
          |--------|-------|
          | Build ID | ${{ steps.metadata.outputs.build-id }} |
          | Version | ${{ steps.metadata.outputs.version }} |
          | Node Version | ${{ inputs.node-version }} |
          | Yarn Version | 3.2.1 |
          | Status | ✅ Success |
          EOF