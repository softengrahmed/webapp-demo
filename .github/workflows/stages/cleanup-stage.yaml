# ============================================================================
# Cleanup Stage Module
# ============================================================================
# Description: Comprehensive cleanup stage for resources and artifacts
# Version: 1.0.0
# ============================================================================

name: Cleanup Stage

on:
  workflow_call:
    inputs:
      retention-days:
        description: 'Number of days to retain artifacts'
        required: false
        default: 7
        type: number
      cleanup-docker:
        description: 'Clean Docker resources'
        required: false
        default: true
        type: boolean
      cleanup-aws:
        description: 'Clean AWS temporary resources'
        required: false
        default: false
        type: boolean

jobs:
  cleanup:
    name: Resource Cleanup
    runs-on: ubuntu-latest
    
    steps:
      - name: Initialize Cleanup
        run: |
          echo "🧹 Starting comprehensive cleanup process..."
          echo "Retention Days: ${{ inputs.retention-days }}"
          echo "Cleanup Docker: ${{ inputs.cleanup-docker }}"
          echo "Cleanup AWS: ${{ inputs.cleanup-aws }}"

      - name: Clean Workspace
        run: |
          echo "📁 Cleaning workspace..."
          rm -rf dist/ node_modules/ coverage/ .next/ .cache/
          rm -rf *.log *.tmp temp/ tmp/
          echo "✅ Workspace cleaned"

      - name: Clean Docker Resources
        if: inputs.cleanup-docker
        run: |
          echo "🐳 Cleaning Docker resources..."
          docker system prune -af --volumes || true
          docker network prune -f || true
          docker volume prune -f || true
          echo "✅ Docker resources cleaned"

      - name: Clean GitHub Actions Cache
        uses: actions/github-script@v7
        with:
          script: |
            console.log('🗑️ Cleaning GitHub Actions cache...');
            
            try {
              const caches = await github.rest.actions.getActionsCacheList({
                owner: context.repo.owner,
                repo: context.repo.repo,
              });
              
              for (const cache of caches.data.actions_caches) {
                if (cache.created_at) {
                  const cacheAge = Date.now() - new Date(cache.created_at).getTime();
                  const maxAge = ${{ inputs.retention-days }} * 24 * 60 * 60 * 1000;
                  
                  if (cacheAge > maxAge) {
                    await github.rest.actions.deleteActionsCacheById({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      cache_id: cache.id,
                    });
                    console.log(`Deleted cache: ${cache.key}`);
                  }
                }
              }
            } catch (error) {
              console.log('Cache cleanup error:', error.message);
            }

      - name: Clean Old Artifacts
        uses: actions/github-script@v7
        with:
          script: |
            console.log('📦 Cleaning old artifacts...');
            
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - ${{ inputs.retention-days }});
            
            let deletedCount = 0;
            for (const artifact of artifacts.data.artifacts) {
              const createdAt = new Date(artifact.created_at);
              if (createdAt < cutoffDate) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                console.log(`Deleted artifact: ${artifact.name}`);
                deletedCount++;
              }
            }
            console.log(`Total artifacts deleted: ${deletedCount}`);

      - name: Clean AWS Resources
        if: inputs.cleanup-aws
        env:
          AWS_REGION: us-east-1
        run: |
          echo "☁️ Cleaning AWS temporary resources..."
          # Add AWS cleanup logic here if needed
          echo "✅ AWS resources cleanup completed"

      - name: Generate Cleanup Report
        run: |
          cat > cleanup-report.json <<EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "runNumber": "${{ github.run_number }}",
            "cleanupActions": [
              {"action": "Workspace Cleanup", "status": "completed"},
              {"action": "Docker Cleanup", "status": "${{ inputs.cleanup-docker && 'completed' || 'skipped' }}"},
              {"action": "Cache Cleanup", "status": "completed"},
              {"action": "Artifact Cleanup", "status": "completed"},
              {"action": "AWS Cleanup", "status": "${{ inputs.cleanup-aws && 'completed' || 'skipped' }}"}
            ],
            "retentionDays": ${{ inputs.retention-days }}
          }
          EOF

      - name: Upload Cleanup Report
        uses: actions/upload-artifact@v4
        with:
          name: cleanup-report-${{ github.run_number }}
          path: cleanup-report.json
          retention-days: 1

      - name: Summary
        run: |
          echo "# Cleanup Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Resource | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Workspace | ✅ Cleaned |" >> $GITHUB_STEP_SUMMARY
          echo "| Docker | ${{ inputs.cleanup-docker && '✅ Cleaned' || '⏭️ Skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Cache | ✅ Cleaned |" >> $GITHUB_STEP_SUMMARY
          echo "| Artifacts | ✅ Cleaned |" >> $GITHUB_STEP_SUMMARY
          echo "| AWS Resources | ${{ inputs.cleanup-aws && '✅ Cleaned' || '⏭️ Skipped' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Cleanup completed at $(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_STEP_SUMMARY